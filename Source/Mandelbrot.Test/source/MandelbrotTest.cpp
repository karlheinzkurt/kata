
#include "Mandelbrot.Lib/include/Mandelbrot.h"

#include <gtest/gtest.h>

TEST(Mandelbrot, SomeSet)
{
   EXPECT_EQ(CMandelbrot(100, 4.).toString(minmax({-0.6, 0.4}), minmax({0.5, 0.65}), minmax({0.1, 0.1})),
   " ......... \n"
   " . .....   \n");
}

TEST(Mandelbrot, IsInSet)
{
   EXPECT_TRUE(CMandelbrot(100, 4.).isInside(complex(-1,0)));
}

TEST(Mandelbrot, IsNotInSet)
{
   EXPECT_FALSE(CMandelbrot(100, 4.).isInside(complex(-1,-1)));
}

auto const m = std::string(R"2end(
                                                                                .                                
                                                                                                                 
                                                                            .                                    
                                                                         ......                                  
                                                                         .......                                 
                                                                          .....                                  
                                                                    ............... .                            
                                                               .......................  ...                      
                                                                ...........................                      
                                                            . ............................                       
                                                            ...............................                      
                                                           ..................................                    
                                           .. ....        ...................................                    
                                           ...........   ....................................                    
                                         ............... ...................................                     
                                     ..  ............... ..................................                      
                .........................................................................                        
                                     ..  ............... ..................................                      
                                         ............... ...................................                     
                                           ...........   ....................................                    
                                           .. ....        ...................................                    
                                                           ..................................                    
                                                            ...............................                      
                                                            . ............................                       
                                                                ...........................                      
                                                               .......................  ...                      
                                                                    ............... .                            
                                                                          .....                                  
                                                                         .......                                 
                                                                         ......                                  
                                                                            .                                    
                                                                                                                 
                                                                                .                                
)2end");

TEST(Mandelbrot, Minimal)
{
   EXPECT_EQ("\n" + CMandelbrot(100, 4.).toString(minmax({-2.5, 1}), minmax({-1, 1}), minmax({0.03125, 0.0625})), m);
}
